AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys the Rafay System helm chart into an existing kubernetes cluster (qsID)"
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing EKS cluster"
ParameterGroups:
ParameterLabels:
Parameters:
Resources:
  AWSQSCreateCluster:
    Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub 'aws-qs-create-cluster-${EKSClusterName}'
        Handler: awsqs_kubernetes_get.handlers.create_rafay_cluster
        MemorySize: 256
        Role: !Ref KubernetesAdminRoleArn
        Runtime: python3.7
        Timeout: 900
        Code:
          S3Bucket: !Sub ['${Prefix}-lambdazips-${AWS::Region}-${AWS::AccountId}', {Prefix: !FindInMap [Config, Prefix, Value]}]
          S3Key: !Sub '${QSS3KeyPrefix}functions/packages/aws_qs_create_cluster/aws_qs_create_cluster.zip'
        Environment:
          Variables:
        VpcConfig:
          SecurityGroupIds: [ !Ref EKSLambdaSecurityGroup ]
          SubnetIds: !Ref EKSSubnetIds
  AWSQSCreateOrg:
    Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub 'aws-qs-create-org-${EKSClusterName}'
        Handler: awsqs_kubernetes_get.handlers.create_rafay_org
        MemorySize: 256
        Role: !Ref KubernetesAdminRoleArn
        Runtime: python3.7
        Timeout: 900
        Code:
          S3Bucket: !Sub [ '${Prefix}-lambdazips-${AWS::Region}-${AWS::AccountId}', { Prefix: !FindInMap [ Config, Prefix, Value ] } ]
          S3Key: !Sub '${QSS3KeyPrefix}functions/packages/aws_qs_create_org/aws_qs_create_org.zip'
        Environment:
          Variables:
        VpcConfig:
          SecurityGroupIds: [ !Ref EKSLambdaSecurityGroup ]
          SubnetIds: !Ref EKSSubnetIds
Outputs:
